{"nbformat_minor": 1, "cells": [{"source": ["# Introduction"], "cell_type": "markdown", "metadata": {"_cell_guid": "e83790e9-af84-4eae-a3bf-a156158c870f", "_uuid": "5be176176440099b5ef1cff33dd94a687c2aaf49"}}, {"source": ["This kernel provides a very first step data exploration of the data with R.\n", "\n", "The aim of this problem is to predict the price of items on online markets, given the item names, descriptions as well as other features. This is a mix of traditional machine learning problem and NLP problem.\n", "\n", "I will be very appreciative if you find this kernel useful and give me an upvote. I will keep updating this kernel and please comment if you have any advice. "], "cell_type": "markdown", "metadata": {"_cell_guid": "52412630-6229-48be-856e-a42a7d417fb3", "_uuid": "751b151617111e190a34e92f40d91ab854e9b482"}}, {"source": ["# Loading Packages and Files"], "cell_type": "markdown", "metadata": {"_cell_guid": "186ebfc5-4fdf-44d1-adc6-28bdc3fcef05", "_uuid": "b6d7c07b4d4b259d5e7d22d5b04d6dcee1cf85d5"}}, {"execution_count": null, "source": ["library(data.table) # Loading data\n", "library(ggplot2) # Data visualization\n", "library(treemapify) # Treemap visualization\n", "library(gridExtra) # Create multiplot\n", "library(dplyr) # data manipulation\n", "library(tidyr) # data manipulation\n", "library(tibble) # data wrangling\n", "library(stringr) # String processing\n", "library(repr)\n", "library(stringi) # String processing"], "cell_type": "code", "metadata": {"collapsed": false, "_cell_guid": "70819a4b-5c28-4ff2-9aad-916be9416441", "_kg_hide-output": true, "_uuid": "f80ccd3a4158a1b229fc0b87b7372e518405f885"}, "outputs": []}, {"execution_count": null, "source": ["train = fread('../input/train.tsv', sep='\\t')\n", "test = fread('../input/test.tsv', sep='\\t')"], "cell_type": "code", "metadata": {"collapsed": false, "_cell_guid": "0416feb6-85ef-41df-82eb-8b0dd99d09e9", "_kg_hide-output": true, "_uuid": "423a9e171688c83675d00ee0749a3f1d956a9948"}, "outputs": []}, {"source": ["# Overview"], "cell_type": "markdown", "metadata": {"_cell_guid": "384665dc-82bc-4315-a214-792655755949", "_uuid": "e754f2d422118ebc96b2328b47df0fd2042814b1"}}, {"source": ["The training data has 1482535 observations with 7 features. The test data has 693359 rows that we need to predict. According to the competition description, the public leaderboard will be evaluated by  ALL of the test data we have at the first stage.\n", "\n", "The evaluation metrics is RMSLE, which gives more penalty on under-estimating prices rather than over-estimating. Due to the nature of RMSLE we take log of the price in our analysis."], "cell_type": "markdown", "metadata": {"_cell_guid": "5a12837b-648b-4ac3-881f-e5b09183c865", "_uuid": "462c6f026d17fd1cb97255416942fb0d33420f83"}}, {"execution_count": null, "source": ["head(train, 3)"], "cell_type": "code", "metadata": {"collapsed": false, "_cell_guid": "74bf58ef-f4f6-4ae6-ac82-901c9512af1d", "_uuid": "73c5794f9dccad23e875319dcf6e630c52ee1470"}, "outputs": []}, {"execution_count": null, "source": ["summary(train)"], "cell_type": "code", "metadata": {"collapsed": false, "_cell_guid": "9eaeee7b-2833-46bd-86c2-e4e552248671", "_kg_hide-output": false, "_uuid": "3dec8839a2fbc1c027614d3d9bc2898ecc970ed9"}, "outputs": []}, {"execution_count": null, "source": ["summary(test)"], "cell_type": "code", "metadata": {"collapsed": false, "_cell_guid": "683dde77-0b40-4f16-a139-65b465d8df06", "_kg_hide-output": true, "_uuid": "b48f190d2f0b6aca5221ffe1231e1701389baf3a"}, "outputs": []}, {"source": ["We can have a a rough look at the features (test data summary is hidden for simplicity)\n", "1. **train_id / test_id**: A unique key for each item.\n", "2. **name**: The item's name as a string.\n", "3. **item_condition_id**: A factor with 5 levels. As the plot below shows, the mean prices for different conditions are really close and it's hard to guess which whether higher / lower condition id is better so far.\n", "4. **category_name**: The category of the item.\n", "5. **brand_name**: The brand name of the item. Nearly half of the items do not have a brand.\n", "6. **shipping**: A binary indicator of the shipping information. (1 if shipping fee is paid by seller and 0 by buyer)\n", "7. **item_description**: A long string containing the raw text of the item description. ~5% of the items do not have a description."], "cell_type": "markdown", "metadata": {"_cell_guid": "b0a84a80-56e4-4d95-8898-6f1cd4bfeff6", "_uuid": "f4669f5814f9f634b4565e6e4fea1236bdb09cec"}}, {"source": ["# Feature Visualizations"], "cell_type": "markdown", "metadata": {"_cell_guid": "d29d3b30-9572-477b-9364-54db1500fb27", "_uuid": "9ac51d52cff0b0cb7cc2fbca256e28e4fa82c4e6"}}, {"source": ["## Prices and Indicators"], "cell_type": "markdown", "metadata": {"_cell_guid": "7c7a42f6-c464-4b31-a025-755ffa683895", "_uuid": "be1029e95423cc771b203f2d716a645d963297f9"}}, {"source": ["As the figures below show, the distribution of log price is more normally-distributed than the orginal scale of price."], "cell_type": "markdown", "metadata": {"_cell_guid": "aad8da15-93ce-4fff-a76e-9e5a9213293f", "_uuid": "d41ec0860e6e384a5c364c2259749883d951f842"}}, {"execution_count": null, "source": ["train = train %>% mutate(log_price = log(price+1)) # take log of the price\n", "train = train %>% mutate(item_condition_id = factor(item_condition_id))\n", "train = train %>% mutate(shipping = factor(shipping))"], "cell_type": "code", "metadata": {"_kg_hide-input": false, "collapsed": true, "_cell_guid": "d1463209-8f69-4a1a-8fbb-fe4a1f2028cf", "_uuid": "47f3e202522ef6283d3f26d60e93fe8383e43c79"}, "outputs": []}, {"execution_count": null, "source": ["options(repr.plot.width=7, repr.plot.height=7)\n", "\n", "p1 = train %>% ggplot(aes(x=log_price)) +\n", "geom_histogram(bins=30) +\n", "ggtitle('Distributon of Log1p Price')\n", "\n", "p2 = train %>% ggplot(aes(x=price)) +\n", "geom_histogram(bins=30) +\n", "xlim(0,300) +\n", "ggtitle('Distributon of Price')\n", "\n", "p3 = train %>% ggplot(aes(x=item_condition_id)) +\n", "geom_bar() +\n", "ggtitle('Distribution of Item Conditions') +\n", "theme(legend.position=\"none\")\n", "\n", "p4 = train %>% ggplot(aes(x=shipping)) +\n", "geom_bar(width=0.5) +\n", "ggtitle('Distribution of Shipping Info') +\n", "theme(legend.position=\"none\")\n", "\n", "suppressWarnings(grid.arrange(p1, p2, p3, p4, ncol=2))"], "cell_type": "code", "metadata": {"_kg_hide-input": true, "collapsed": false, "_cell_guid": "671f1bed-c4cf-48fe-aab9-a46bee3fc3d7", "_kg_hide-output": false, "_uuid": "724e824b087d8562e9244bfcaf03c30a5cc30c34"}, "outputs": []}, {"source": ["## Categories and Brands"], "cell_type": "markdown", "metadata": {"_cell_guid": "56c318a9-5617-4270-b71a-b0a63491771e", "_uuid": "aa9ac3a2ef5ca2485b8b9f426d0d154f071d001f"}}, {"source": ["We notice that the category_name is actually encoded as three or four hierarchical levels splitted by /. (Thanks to [Abhinav Reddy Kaitha](https://www.kaggle.com/abhinavkaitha) there are some items with four levels instead of three)\n", "\n", "We can split the category names and store them into 4 columns. The major category (1st category) only has 11 levels and we can make distinguishable visualizations on them. From the 2nd level on the # of levels are too many to visualize.\n", "\n", "Most items only have three levels of categories. But the 4th level exists with 8 unique sub-categories and 4389 items. For modeling perspective it may be fine to combine it with 3rd levels but for analysis purpose I extract and keep the 4th level here."], "cell_type": "markdown", "metadata": {"_cell_guid": "27076269-77bc-4f77-b3d0-4ee2b71ec73d", "_uuid": "b6b9918155c88040a51e6a0230972e323d0d6fd5"}}, {"execution_count": null, "source": ["train = data.frame(train, str_split_fixed(train$category_name, '/', 4)) %>%\n", "mutate(cat1=X1, cat2=X2, cat3=X3, cat4=X4) %>% select(-X1, -X2, -X3, -X4)\n", "\n", "train %>% summarise(Num_Cat1 = length(unique(cat1)), Num_Cat2 = length(unique(cat2)),\n", "Num_Cat3 = length(unique(cat3)), Num_Cat4 = length(unique(cat4)))"], "cell_type": "code", "metadata": {"_kg_hide-input": false, "collapsed": false, "_cell_guid": "e3ad6a17-9324-48ec-8432-00b1d76c7f27", "_uuid": "d76456c65aeadabc56fed90e9643b39ae1c32996"}, "outputs": []}, {"execution_count": null, "source": ["train %>% filter(cat4 != '') %>% nrow"], "cell_type": "code", "metadata": {"_kg_hide-input": false, "collapsed": false, "_cell_guid": "e3ad6a17-9324-48ec-8432-00b1d76c7f27", "scrolled": true, "_uuid": "d76456c65aeadabc56fed90e9643b39ae1c32996"}, "outputs": []}, {"execution_count": null, "source": ["options(repr.plot.width=7, repr.plot.height=7)\n", "\n", "train %>%\n", "group_by(cat1, cat2) %>%\n", "count() %>%\n", "ungroup() %>%\n", "ggplot(aes(area=n, fill=cat1, label=cat2, subgroup=cat1)) +\n", "geom_treemap() +\n", "geom_treemap_subgroup_text(grow = T, alpha = 0.5, colour =\n", "                           \"black\", fontface = \"italic\", min.size = 0) +\n", "geom_treemap_text(colour = \"white\", place = \"topleft\", reflow = T) +\n", "theme(legend.position = \"null\") +\n", "ggtitle(\"1st and 2nd Hierarchical Category Levels\")"], "cell_type": "code", "metadata": {"_kg_hide-input": true, "collapsed": false, "_cell_guid": "e3ad6a17-9324-48ec-8432-00b1d76c7f27", "_uuid": "d76456c65aeadabc56fed90e9643b39ae1c32996"}, "outputs": []}, {"execution_count": null, "source": ["options(repr.plot.width=7, repr.plot.height=7)\n", "\n", "p1 = train %>% count(cat1) %>% \n", "ggplot(aes(x=reorder(cat1, -n), y=n)) +\n", "geom_bar(stat='identity', width=0.7) +\n", "ggtitle('1st Level Categories') +\n", "xlab('1st Level Catogory') +\n", "ylab('count') +\n", "theme(axis.text.x=element_text(angle=15, hjust=1))\n", "\n", "p2 = train %>% count(cat2) %>% \n", "filter(n>20000) %>% \n", "ggplot(aes(x=reorder(cat2,-n), y=n)) +\n", "geom_bar(stat='identity', width=0.7) +\n", "ggtitle('2nd Level Categories (>20000 only)') +\n", "xlab('2nd Level Catogory') +\n", "ylab('count') +\n", "theme(axis.text.x=element_text(angle=15, hjust=1, size=7))\n", "\n", "grid.arrange(p1, p2, ncol=1)"], "cell_type": "code", "metadata": {"_kg_hide-input": true, "collapsed": false, "_cell_guid": "c03e33c8-d431-4f81-9fd5-4d57cc33e53d", "_uuid": "aa16335bb79ab5bead6a45688491c6ecfe4bf6e4"}, "outputs": []}, {"source": ["For visualizing I only subset the 2nd categories with 20000+ items.\n", "\n", "It appears that the major 1st level category in this online shopping market is Women. So let's take a step into it and look at the 2nd category under women. It appears most items are clothings and accessories."], "cell_type": "markdown", "metadata": {"_cell_guid": "8d2cf745-4da9-407d-9c2a-53c062a8c608", "_uuid": "effccc02e32a6be427c7d42b57fd487f2f8bd69f"}}, {"execution_count": null, "source": ["options(repr.plot.width=7, repr.plot.height=7)\n", "\n", "train %>% filter(cat1=='Women') %>% \n", "group_by(cat2, cat3) %>%\n", "count() %>%\n", "ungroup() %>%\n", "ggplot(aes(area=n, fill=cat2, label=cat3, subgroup=cat2)) +\n", "geom_treemap() +\n", "geom_treemap_subgroup_text(grow = T, alpha = 0.5, colour =\n", "                           \"black\", fontface = \"italic\", min.size = 0) +\n", "geom_treemap_text(colour = \"white\", place = \"topleft\", reflow = T) +\n", "theme(legend.position = \"null\") +\n", "ggtitle(\"2nd and 3rd Hierarchical Category Levels Under Woman\")"], "cell_type": "code", "metadata": {"_kg_hide-input": true, "collapsed": false, "_cell_guid": "ff68baa4-0b54-4118-b0e6-a18c33b0c0a9", "_uuid": "c751e8026fac69f4effc4b3d9dfb48ef396da833"}, "outputs": []}, {"execution_count": null, "source": ["options(repr.plot.width=7, repr.plot.height=3.5)\n", "\n", "train %>% filter(cat1=='Women') %>%\n", "count(cat2) %>% \n", "ggplot(aes(x=reorder(cat2, -n), y=n)) +\n", "geom_bar(stat='identity', width=0.7) +\n", "ggtitle('2nd Level Categories Under Women') +\n", "xlab('2nd Level Catogory Under Women') +\n", "ylab('count') +\n", "theme(axis.text.x=element_text(angle=30, hjust=1, size=8))"], "cell_type": "code", "metadata": {"_kg_hide-input": true, "collapsed": false, "_cell_guid": "d39b6dd4-3471-46b1-b8c0-e1fe01564449", "_uuid": "a6b6c8b45dea8fa8a82504121fc09be746722345"}, "outputs": []}, {"source": ["Nearly half of the items don't have brands. The proportions of items that have brands vary in different categories. For example, Nearly all handmade items don't have brand names, of course.\n", "\n", "For brands, they are not in a hierarchical order and there are too many to be fitted in one graph. So I plotted the count of top 10 most frequent brands for a rough look. Each brand contains items from 1 or more major categories. Not surprisingly, the top brands are dominated by women items except Apple and Nintendo."], "cell_type": "markdown", "metadata": {"_cell_guid": "530eb693-633b-4e8d-98d9-cfc05d4e9578", "_uuid": "39e01eaf6ee5ef2642e84fc137ebbb3e1d908d46"}}, {"execution_count": null, "source": ["options(repr.plot.width=7, repr.plot.height=3.5)\n", "\n", "train = train %>% mutate(has_brand=(brand_name!=''))\n", "train %>%\n", "ggplot(aes(x=cat1, fill=has_brand)) +\n", "geom_bar(position='fill') +\n", "theme(axis.text.x=element_text(angle=15, hjust=1, size=8)) +\n", "xlab('1st Categories') +\n", "ylab('Proportion') +\n", "ggtitle('Items With and Without Brands')"], "cell_type": "code", "metadata": {"_kg_hide-input": true, "collapsed": false, "_cell_guid": "cd7e9348-53ec-49c1-bf88-b3aa18b9327a", "_uuid": "9a710c2d2a8eacea185e6e21fb33a87197863071"}, "outputs": []}, {"execution_count": null, "source": ["options(repr.plot.width=7, repr.plot.height=3.5)\n", "\n", "top10 = train %>% filter(brand_name!='') %>% \n", "count(brand_name) %>%\n", "arrange(desc(n)) %>%\n", "head(10)\n", "\n", "train %>% filter(brand_name %in% top10$brand_name) %>%\n", "ggplot(aes(x=factor(brand_name, levels=rev(top10$brand_name)), fill=cat1)) +\n", "geom_bar(width=0.5) +\n", "coord_flip() +\n", "xlab('brand') +\n", "labs(fill='1st Category') +\n", "ggtitle('Top 10 Brands and Their Categories')"], "cell_type": "code", "metadata": {"_kg_hide-input": true, "collapsed": false, "_cell_guid": "68ec9a30-755d-453a-a581-fdc4ec47ea9c", "_uuid": "62796dc28f9b5b149b389530c760918d93aea7c9"}, "outputs": []}, {"source": ["## Item Descriptions"], "cell_type": "markdown", "metadata": {"_cell_guid": "73e23a74-17fc-4837-b8f3-db1343b50536", "_uuid": "aad254015fc2574e7e4a481bb73de22d6366a7ac"}}, {"source": ["For the item description, I extract two most simple features of the text: the length of the text and the number of words of the text. It shows that both of them have a exponential distribution with a long tail."], "cell_type": "markdown", "metadata": {"_cell_guid": "67a27aaa-7488-4eab-b982-2406ab8dbb00", "_uuid": "c6c9cb18df2b04c60c1a97e03780227471d93cb0"}}, {"execution_count": null, "source": ["options(repr.plot.width=7, repr.plot.height=3.5)\n", "\n", "p1 = train %>% mutate(len_of_des = str_length(item_description)) %>%\n", "ggplot(aes(x=len_of_des)) +\n", "geom_histogram(bins=50) +\n", "ggtitle('Distribution of Length of Descriptions') +\n", "xlab('Length of Item Description') +\n", "theme(plot.title = element_text(size=10))\n", "\n", "p2 = train %>% mutate(num_token_des = str_count(item_description, '\\\\S+')) %>% \n", "ggplot(aes(x=num_token_des)) +\n", "geom_histogram(bins=50) +\n", "ggtitle('Distribution of # of Tokens of Descriptions') +\n", "xlab('Number of Tokens') +\n", "theme(plot.title = element_text(size=10))\n", "\n", "grid.arrange(p1, p2, ncol=2)"], "cell_type": "code", "metadata": {"_kg_hide-input": true, "collapsed": false, "_cell_guid": "d58a42d8-179f-4985-993c-e66a32063b04", "_uuid": "84ad2a9a20776bf83ce21cfcb274fc4aa3c72934"}, "outputs": []}, {"source": ["## Names"], "cell_type": "markdown", "metadata": {"_cell_guid": "82ccedbe-7c63-4cb3-8900-179d1920d335", "_uuid": "d4d231732e467163942590ffde640bbc7bd34fa7"}}, {"source": ["Name is a very important feature \u2014\u2014 it directly tell us what the items are. But it's hard to be categorized or one-hot encoded because there are 1225273 uniqle names for all the items. We should find some ways to extract the information from the item name."], "cell_type": "markdown", "metadata": {"_cell_guid": "d55cfe7d-acd0-4d94-a446-5e216ad1701f", "_uuid": "d2af15ab0139056f72212e43a83f2c4c022397c5"}}, {"execution_count": null, "source": ["length(unique(train$name))"], "cell_type": "code", "metadata": {"collapsed": false, "_cell_guid": "de79f358-bad0-4f51-a06a-da1c249ddaef", "_uuid": "983de409264f809b944c56f20b9e1af488b3a3db"}, "outputs": []}, {"execution_count": null, "source": ["options(repr.plot.width=7, repr.plot.height=3.5)\n", "\n", "train = train %>% mutate(num_token_name = str_count(name, '\\\\S+'))\n", "train %>%\n", "ggplot(aes(x=num_token_name)) +\n", "geom_bar(width=0.7) +\n", "ggtitle('Distribution of # of Tokens of Names') +\n", "xlab('Number of Words')"], "cell_type": "code", "metadata": {"_kg_hide-input": true, "collapsed": false, "_cell_guid": "2d1b8def-75fc-4422-ae13-f59d02697311", "_uuid": "06c9d3960e7f183a965e7ee4fd0e93be9ffdd5b4"}, "outputs": []}, {"source": ["A very intuitive question would be: does the item name include its category and brand information? We know that the 3-level categories has been a very detailed classification of all the items. We can see how many items include their 3rd categories and brands in their names."], "cell_type": "markdown", "metadata": {"_cell_guid": "50e765bb-3066-436c-9e3c-90c6980841c3", "_uuid": "ab28662c009bfd31330610d9e570ae2cc22c3f3b"}}, {"execution_count": null, "source": ["options(repr.plot.width=7, repr.plot.height=7)\n", "\n", "p1 = train %>% filter(cat1!='') %>% \n", "mutate(cat3 = as.character(cat3)) %>% \n", "mutate(cat_in_name = (str_detect(name, cat3))) %>% \n", "ggplot(aes(x=cat1, fill=cat_in_name)) +\n", "geom_bar(position='fill') +\n", "theme(axis.text.x=element_text(angle=30, hjust=1, size=8)) +\n", "xlab('1st Categories') +\n", "ylab('Proportion') +\n", "ggtitle('3rd Category Appears in Item Name')\n", "\n", "p2 = train %>% filter(has_brand) %>% \n", "mutate(brand_name = as.character(brand_name)) %>% \n", "mutate(brand_in_name = (str_detect(name, brand_name))) %>% \n", "ggplot(aes(x=cat1, fill=brand_in_name)) +\n", "geom_bar(position='fill') +\n", "theme(axis.text.x=element_text(angle=30, hjust=1, size=8)) +\n", "xlab('1st Categories') +\n", "ylab('Proportion') +\n", "ggtitle('Brand Appears in Item Name')\n", "\n", "grid.arrange(p1, p2, ncol=1)"], "cell_type": "code", "metadata": {"_kg_hide-input": true, "collapsed": false, "_cell_guid": "b78f424e-a6fc-4873-bac0-6cd3b7109e8b", "_uuid": "10e0400c52071311b56e4ef9197154987125b032"}, "outputs": []}, {"source": ["It appears that few item names include their categories, but many items include their brands.\n", "\n", "If we look at the brand_in_name information by brands, we can surprisingly see that it varies a lot by brands. For example, many of the Nike products contain 'Nike' in their names while Apple products don't show this trend \u2014\u2014 perhaps they are named 'iphone' or 'macbook' and everyone knows they are from Apple."], "cell_type": "markdown", "metadata": {"_cell_guid": "29cbfd08-5c54-4a60-a22f-2ef570be66f6", "_uuid": "00cdc0037614346a64395e19e1d4d6c23dd45927"}}, {"execution_count": null, "source": ["options(repr.plot.width=7, repr.plot.height=3.5)\n", "\n", "train %>% filter(brand_name %in% top10$brand_name) %>%\n", "mutate(brand_name = as.character(brand_name)) %>% \n", "mutate(brand_in_name = (str_detect(name, brand_name))) %>% \n", "ggplot(aes(x=factor(brand_name, levels=top10$brand_name), fill=brand_in_name)) +\n", "geom_bar(position='fill') +\n", "theme(axis.text.x=element_text(angle=30, hjust=1, size=8)) +\n", "xlab('1st Categories') +\n", "ylab('Proportion') +\n", "ggtitle('Brand Appears in Item Name (By Top 10 Brands)')"], "cell_type": "code", "metadata": {"_kg_hide-input": true, "collapsed": false, "_cell_guid": "76a3aa74-1559-4f2e-bd7f-052ff99e7f53", "_uuid": "f9218e8799c4bdf07d36013209639c61c797a954"}, "outputs": []}, {"source": ["This is just a very initial step to look at item names. More information can be extract from this feature."], "cell_type": "markdown", "metadata": {"_cell_guid": "27099e9e-3606-4db5-bf9a-9ffc0a0dfd18", "_uuid": "7c75996d83907e9d4e3c461827ac9c0e8e93b370"}}, {"source": ["# Interaction with Price"], "cell_type": "markdown", "metadata": {"_cell_guid": "2db13dc8-81d7-439a-a3b4-bf2eec213680", "_uuid": "f288a792ecabdcef715e0eb4330ac1a921e0f0cf"}}, {"source": ["Our objective is to predict price. Here below shows the relation between some major features and the response log price. The main purpose of this section is to give you some inspirations on creating useful features.\n", "\n", "First we will see the predictive power of condition and shiping info. Unfortunately the mean price doesn't vary too much. We can see that even though we take log to the price, there are still lots of outliers."], "cell_type": "markdown", "metadata": {"_cell_guid": "56543b41-0f30-41c7-9ea8-7e976ef944b4", "_uuid": "b6fa7be696f1c7ac651142d448b267bf59e87ea7"}}, {"execution_count": null, "source": ["options(repr.plot.width=7, repr.plot.height=3.5)\n", "\n", "p1 = train %>%\n", "ggplot(aes(x=item_condition_id, y=log_price, fill=item_condition_id)) +\n", "geom_boxplot(outlier.size=0.1) +\n", "ggtitle('Boxplot of Log Price versus Condition') +\n", "theme(legend.position=\"none\", plot.title = element_text(size=10))\n", "\n", "p2 = train %>%\n", "ggplot(aes(x=shipping, y=log_price, fill=shipping)) +\n", "geom_boxplot(width=0.5, outlier.size=0.1) +\n", "ggtitle('Boxplot of Log Price versus Shipping') +\n", "theme(legend.position=\"none\", plot.title = element_text(size=10))\n", "\n", "grid.arrange(p1, p2, ncol=2)"], "cell_type": "code", "metadata": {"_kg_hide-input": true, "collapsed": false, "_cell_guid": "96a41ef8-a876-4a1a-9201-93b003294f0f", "_uuid": "bca89b895f17854c8748415a63fdfd9f5a9342d6"}, "outputs": []}, {"source": ["The item is more expensive If the shipping fee is expected to be paid by the buyer.\n", "\n", "Next we would like to investigate the predictive power of categories and brands."], "cell_type": "markdown", "metadata": {"_cell_guid": "299426fd-0b23-44d1-9f66-5d797d5bff8b", "_uuid": "374495f6c5507f896d6831be6219c0c892f95c0b"}}, {"execution_count": null, "source": ["options(repr.plot.width=7, repr.plot.height=3.5)\n", "\n", "train %>%\n", "ggplot(aes(x=cat1, y=log_price, fill=has_brand)) +\n", "geom_boxplot(outlier.size=0.1) +\n", "ggtitle('Boxplot of Log Price versus 1st Category') +\n", "xlab('1st Category') +\n", "theme(axis.text.x=element_text(angle=15, hjust=1))"], "cell_type": "code", "metadata": {"_kg_hide-input": true, "collapsed": false, "_cell_guid": "d19f344e-0106-42c3-8677-5b9da0feafc6", "_uuid": "3b8f1a5cbd3f666d63ea7f2af0be6d8a8e5b117a"}, "outputs": []}, {"source": ["The price don't differ too much between different categories. However, there is a clear trend that items with brands have higher price than items without brands, especially for the electronics. "], "cell_type": "markdown", "metadata": {"_cell_guid": "7f092a62-7edb-4998-91c6-0116e2c16c34", "_uuid": "b605668b8e77847fbfa07c03fff4c74c006c5dc7"}}, {"execution_count": null, "source": ["options(repr.plot.width=7, repr.plot.height=7)\n", "\n", "train %>% mutate(len_of_des = str_length(item_description)) %>%\n", "group_by(len_of_des) %>%\n", "summarise(mean_log_price = mean(log_price)) %>% \n", "ggplot(aes(x=len_of_des, y=mean_log_price)) +\n", "geom_point(size=0.5) +\n", "geom_smooth(method = \"loess\", color = \"red\", size=0.5) +\n", "ggtitle('Mean Log Price versus Length of Description')"], "cell_type": "code", "metadata": {"_kg_hide-input": true, "collapsed": true, "_cell_guid": "509c2c4b-ba8e-4f2e-ab3b-09bc386944f0", "_uuid": "dc94f7d6842e9a7a47c873a2cf563cad8829296a"}, "outputs": []}, {"execution_count": null, "source": ["options(repr.plot.width=7, repr.plot.height=7)\n", "\n", "train %>% mutate(num_token_des = str_count(item_description, '\\\\S+')) %>%\n", "group_by(num_token_des) %>%\n", "summarise(mean_log_price = mean(log_price)) %>% \n", "ggplot(aes(x=num_token_des, y=mean_log_price)) +\n", "geom_point(size=0.5) +\n", "geom_smooth(method = \"loess\", color = \"red\", size=0.5) +\n", "ggtitle('Mean Log Price versus # of Tokens of Description')"], "cell_type": "code", "metadata": {"_kg_hide-input": true, "collapsed": true, "_cell_guid": "a8e6555e-f254-407a-a0c7-7b9feae4d3e7", "_uuid": "dcc681298cbb5002ee664d2ed49034b5104f437c"}, "outputs": []}, {"source": ["There is a very interesting quadratic trend between # of words of description and the price. Note that when the # of words increases, the sample size for each point decreases exponentially, the variance of the mean log price then becomes large due to the central limit theorem."], "cell_type": "markdown", "metadata": {"_cell_guid": "5c544efc-feec-4720-9ba0-1bf540cbe959", "_uuid": "d06d4540ca2f8a3cc25bc067276fdebd830c6036"}}], "metadata": {"language_info": {"name": "R", "version": "3.4.2", "codemirror_mode": "r", "mimetype": "text/x-r-source", "file_extension": ".r", "pygments_lexer": "r"}, "kernelspec": {"display_name": "R", "name": "ir", "language": "R"}}, "nbformat": 4}